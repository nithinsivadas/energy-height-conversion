%  - - - - - - - - - -
%   i a u P v s t a r
%  - - - - - - - - - -
%
%  Convert star position+velocity vector to catalog coordinates.
%
%  This function is part of the International Astronomical Union's
%  SOFA (Standards Of Fundamental Astronomy) software collection.
%
%  Status:  support function.
%
%  Given (Note 1):
%     pv(2,3)         pv-vector (AU, AU/day)
%
%  Returned (Note 2):
%     ra              right ascension (radians)
%     dec             declination (radians)
%     pmr             RA proper motion (radians/year)
%     pmd             Dec proper motion (radians/year)
%     px              parallax (arcsec)
%     rv              radial velocity (km/s, positive = receding)
%
%  Notes:
%
%  1) The specified pv-vector is the coordinate direction (and its rate
%     of change) for the date at which the light leaving the star
%     reached the solar-system barycenter.
%
%  2) The star data returned by this function are "observables" for an
%     imaginary observer at the solar-system barycenter.  Proper motion
%     and radial velocity are, strictly, in terms of barycentric
%     coordinate time, TCB.  For most practical applications, it is
%     permissible to neglect the distinction between TCB and ordinary
%     "proper" time on Earth (TT/TAI).  The result will, as a rule, be
%     limited by the intrinsic accuracy of the proper-motion and
%     radial-velocity data;  moreover, the supplied pv-vector is likely
%     to be merely an intermediate result (for example generated by the
%     function iauStarpv), so that a change of time unit will cancel
%     out overall.
%
%     In accordance with normal star-catalog conventions, the object's
%     right ascension and declination are freed from the effects of
%     secular aberration.  The frame, which is aligned to the catalog
%     equator and equinox, is Lorentzian and centered on the SSB.
%
%     Summarizing, the specified pv-vector is for most stars almost
%     identical to the result of applying the standard geometrical
%     "space motion" transformation to the catalog data.  The
%     differences, which are the subject of the Stumpff paper cited
%     below, are:
%
%     (i) In stars with significant radial velocity and proper motion,
%     the constantly changing light-time distorts the apparent proper
%     motion.  Note that this is a classical, not a relativistic,
%     effect.
%
%     (ii) The transformation complies with special relativity.
%
%  3) Care is needed with units.  The star coordinates are in radians
%     and the proper motions in radians per Julian year, but the
%     parallax is in arcseconds; the radial velocity is in km/s, but
%     the pv-vector result is in AU and AU/day.
%
%  4) The proper motions are the rate of change of the right ascension
%     and declination at the catalog epoch and are in radians per Julian
%     year.  The RA proper motion is in terms of coordinate angle, not
%     true angle, and will thus be numerically larger at high
%     declinations.
%
%  5) Straight-line motion at constant speed in the inertial frame is
%     assumed.  If the speed is greater than or equal to the speed of
%     light, the function aborts with an error status.
%
%  6) The inverse transformation is performed by the function iauStarpv.
%
%  Called:
%     iauPn        decompose p-vector into modulus and direction
%     iauPdp       scalar product of two p-vectors
%     iauSxp       multiply p-vector by scalar
%     iauPmp       p-vector minus p-vector
%     iauPm        modulus of p-vector
%     iauPpp       p-vector plus p-vector
%     iauPv2s      pv-vector to spherical
%     iauAnp       normalize angle into range 0 to 2pi
%
%  Reference:
%     Stumpff, P., 1985, Astron.Astrophys. 144, 232-240.
%
%  This revision:  2008 May 18
%
%  SOFA release 2012-03-01
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [ra, dec, pmr, pmd, px, rv] = iauPvstar(pv)

constants

% Isolate the radial component of the velocity (AU/day, inertial).
[r, x] = iauPn(pv(1,:));
vr = iauPdp(x, pv(2,:));
ur = iauSxp(vr, x);

% Isolate the transverse component of the velocity (AU/day, inertial).
ut = iauPmp(pv(2,:), ur);
vt = iauPm(ut);

% Special-relativity dimensionless parameters.
bett = vt / DC;
betr = vr / DC;

% The inertial-to-observed correction terms.
d = 1 + betr;
w = 1 - betr*betr - bett*bett;
del = sqrt(w) - 1;

% Apply relativistic correction factor to radial velocity component.
if (betr ~= 0)
    w = (betr - del) / (betr * d);
else
    w = 1;
end

usr = iauSxp(w, ur);

% Apply relativistic correction factor to tangential velocity
% component.                                                 
ust = iauSxp(1/d, ut);

% Combine the two to obtain the observed velocity vector (AU/day).
pv(2,:) = iauPpp(usr, ust);

% Cartesian to spherical.
[a, dec, r, rad, decd, rd] = iauPv2s(pv);

% Return RA in range 0 to 2pi.
ra = iauAnp(a);

% Return proper motions in radians per year.
pmr = rad * DJY;
pmd = decd * DJY;

% Return parallax in arcsec.
px = DR2AS / r;

% Return radial velocity in km/s.
rv = 1e-3 * rd * DAU / DAYSEC;

