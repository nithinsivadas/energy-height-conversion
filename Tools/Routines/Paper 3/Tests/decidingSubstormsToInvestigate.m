%% decidingSubstormToInvestigate.m
% This routine uses the table generated by the routine substorm_table.m, 
% and existing downloaded AMISR data files mentioned in list1 and list2
% variables, and output the files that ought to be downloaded or processed.
% 

clear all;

list1 = strsplit("20061210.006.tar.gz  20100804.003.tar.gz  20110805.007.tar.gz  20141207.001.tar.gz  20161016.003.tar.gz  20161223.001.tar.gz  20170625.001.tar.gz  20170918.001.tar.gz 20070727.006.tar.gz  20101213.011.tar.gz  20121220.001.tar.gz  20150112.001.tar.gz  20161102.001.tar.gz  20170330.009.tar.gz  20170715.004.tar.gz  20170930.001.tar.gz 20070729.001.tar.gz  20101220.001.tar.gz  20130527.001.tar.gz  20150113.001.tar.gz  20161110.001.tar.gz  20170404.001.tar.gz  20170817.002.tar.gz  20171003.001.tar.gz 20070730.001.tar.gz  20110321.002.tar.gz  20140206.003.tar.gz  20150122.006.tar.gz  20161113.001.tar.gz  20170420.001.tar.gz  20170902.001.tar.gz 20070811.001.tar.gz  20110412.001.tar.gz  20140530.010.tar.gz  20150126.001.tar.gz  20161125.001.tar.gz  20170422.007.tar.gz  20170914.001.tar.gz 20080906.002.tar.gz  20110805.005.tar.gz  20140827.011.tar.gz  20161013.003.tar.gz  20161220.001.tar.gz  20170623.001.tar.gz  20170916.001.tar.gz")';
parts1 = regexp(list1,'\.tar.gz','split');
load('G:\My Drive\Research\Projects\Paper 3\Data\table_of_substorms_full.mat');
% T2 = T1(T1.MLAT<70 & T1.BarkerCode,:);
T2 = T(T.MLAT<70 & absDiffMLT(T.MLT,T.PFISR_MLT)<2 & T.BarkerCode,:);
T3 = T1(T1.MLAT<70 & absDiffMLT(T1.MLT,T1.PFISR_MLT)<2 & T1.BarkerCode,:);

indx1 = zeros(size(T2.PFISR_ExpID));
indx31 = zeros(size(T3.PFISR_ExpID));
for i=1:1:length(list1)
    list11(1,i) = parts1{i}(1);
   indx1 = indx1 + strcmp(deblank(T2.PFISR_ExpID),list11(1,i));
   indx31 = indx31 + strcmp(deblank(T3.PFISR_ExpID),list11(1,i));
end
list11 = list11';

[~,out]=system('dir "G:\My Drive\Research\Projects\Paper 3\Data\PFISR\*.h5" /B');
list2 = string(strsplit(out))';
parts2 = regexp(list2,'\_bc','split');
indx2 = zeros(size(T2.PFISR_ExpID));
indx32 = zeros(size(T3.PFISR_ExpID));
for i=1:1:length(list2)
    list21(1,i) = parts2{i}(1);
    indx2 = indx2 + strcmp(deblank(T2.PFISR_ExpID),list21(1,i));
    indx32 = indx32 + strcmp(deblank(T3.PFISR_ExpID),list21(1,i));
end
list21 = list21';


indx = indx1 | indx2;
indx3 = indx31 | indx32; 
%% Files with PFISR, List 1, that meet criteria
fileList1 = join(join([deblank(unique(T2.PFISR_ExpID(logical(indx1)))),repmat(".tar.gz",length(unique(T2.PFISR_ExpID(logical(indx1)))),1)],""));

% Files with DASC & PFISR, List 1, that meet criteria
fileList31 = join(join([deblank(unique(T3.PFISR_ExpID(logical(indx31) & isnat(T3.DASC_TimeMin)))),repmat(".tar.gz",length(unique(T3.PFISR_ExpID(logical(indx31)& isnat(T3.DASC_TimeMin)))),1)],""));

fileList2 = join(join([deblank(unique(T2.PFISR_ExpID(logical(indx2)))),repmat(".tar.gz",length(unique(T2.PFISR_ExpID(logical(indx2)))),1)],""));
fileList32 = join(join([deblank(unique(T3.PFISR_ExpID(logical(indx32)))),repmat(".tar.gz",length(unique(T3.PFISR_ExpID(logical(indx32)))),1)],""));

% How many files in List 1 are not in T2 (and why not?)
for i = 1:1:45 a(i) = isempty(T2(strcmp(deblank(T2.PFISR_ExpID(logical(indx1))),list11(i)),:)); end

%% Table with
disp('Table of substorms with PFISR and/or DASC data');
disp(T3);
disp('PFISR experiments from the above table that are not yet processed/downloaded');
disp(join(deblank(T3.PFISR_ExpID(~indx3))));



function dMLT = absDiffMLT(a,b)
    % Source: https://stackoverflow.com/questions/32276369/calculating-absolute-differences-between-two-angles 
    normMLT = mod(a-b,24);
    dMLT = min(24-normMLT, normMLT);
end