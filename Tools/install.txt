Listing several things to track:

1. MATLAB 2017b
	For isfile

2. Usage of filesep function
	All path names ought to have the appropriate file separation '/'

3. External Tools
	3.1 G77 Fortran
	Installing g77
	https://askubuntu.com/questions/837618/need-the-gnu-g77-fortran-compiler-on-ubuntu-16-04-having-issues
	Fix errors here:
	http://seanelvidge.com/2017/01/install-g77-on-ubuntu-14-04/

	3.10 MinGW
	MinGW has the FORTRAN compiler necessary to compile IRI2016
	https://www.scivision.co/windows-gcc-gfortran-cmake-make-install/
	This might conflict with G77 path, and hence was removed. 

	3.2 MagParameterProgram
	Compile the fortran code
	Add folder to .gitignore

	3.3 SPDF
	Install the linux version of the SPDF, and add folder to .gitignore

	3.4 IRBEM
	Download IRBEM, and install according to instructions. And add it to MATLAB path file.
	If one cannot edit MATLAB path file, use setup.m in MATLAB folder.

	3.8 Financial Toolbox for MATLAB (to run f107_aph.m)

	3.9 MATLAB mapping Toolbox

	3.5 Python
	MATLAB can access python with limited functionality. Check version of Python
	that matlab has access to using 'pyversion' command. If you want to change the
	python version, add pyversion(locationOfPythonExecutable) to the matlab setup.m

	3.6 AACGMv2
	Install aacgmv2 by following instructions on https://aacgmv2.readthedocs.io/en/stable/installation.html
	AACGM - Altitude-adjusted corrected geomagnetic coordinates. https://aacgmv2.readthedocs.io/en/stable/readme.html
	In order to pass matlab time variables to the functions, you need to modify the respective
	aacgm function to accept matlab time input, and convert the number to python datetime format.
	In order to do this, I have created matpy.py that can be found in External Tools folder. .

	3.7 IRI2016 (for iri, Michael Hirsh's tools)
	create a conda environment with py36
	shell>> conda create -n py36 python==3.6
	matlab>>pyversion(path to py3.6 in matlab)
	shell>> git clone https://github.com/scivision/IRI2016.git
	Go into the repository and install
	shell>> pip install -e .

	However, python has some errors. So we can separately compile the fortan code,
	and use iri2016_driver.for to generate text that can be parsed by MATLAB.
	shell>> git pull
	shell>> cd /IRI2016/bin
	shell>> cmake ../src
	shell>> make

	Once the fortran is compiled, you can use /IRI2016/matlab/iri2016.m function to generate IRI data.
